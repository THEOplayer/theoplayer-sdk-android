apply plugin: 'com.android.application'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId project.ext.groupId
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }

    // Note the order of the flavors are important in generating the publishing artifacts
    flavorDimensions "module"
    productFlavors {
//        minapi21 {
//            dimension "api"
//            minSdkVersion 21
//            ext {
//                artifactId = "${project.ext.bundleName}-${name}"
//                aarBaseName = name
//            }
//        }
//        androidTV {
//            dimension "api"
//            minSdkVersion 21
//            ext {
//                artifactId = "${project.ext.bundleName}-${name}"
//                aarBaseName = name
//            }
//        }
//        fireTV {
//            dimension "api"
//            minSdkVersion 21
//            ext {
//                artifactId = "${project.ext.bundleName}-${name}"
//                aarBaseName = name
//            }
//        }
         core {
            dimension "module"
            ext {
                artifactId = 'core'
                aarBaseName = 'core'
            }
        }
        ads {
            dimension "module"
            ext {
                artifactId = 'integration-ads'
                aarBaseName = "ads"
            }
        }
        ima {
            dimension "module"
            ext {
                artifactId = 'integration-ads-ima'
                aarBaseName = 'ima'
            }
        }
        dai {
            dimension "module"
            ext {
                artifactId = 'integration-ads-dai'
                aarBaseName = 'dai'
            }
        }
        mediatailor {
            dimension "module"
            ext {
                artifactId = 'integration-ads-mediatailor'
                aarBaseName = 'mediatailor'
            }
        }
        cast {
            dimension "module"
            ext {
                artifactId = 'integration-cast'
                aarBaseName = 'cast'
            }
        }
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.2'
    coreImplementation 'com.google.android.gms:play-services-basement:17.6.0'
    imaImplementation "com.google.ads.interactivemedia.v3:interactivemedia:3.25.1"
    imaImplementation "com.theoplayer.theoplayer-sdk-android:integration-ads:${project.ext.sdkVersion}"
    daiImplementation "com.theoplayer.theoplayer-sdk-android:integration-ads-ima:${project.ext.sdkVersion}"
    daiImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    castImplementation "com.google.android.gms:play-services-cast-framework:21.0.1"
    castImplementation "androidx.mediarouter:mediarouter:1.2.6"
    mediatailorImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
}

task updateProperties() {
    def groupId = project.ext.groupId
    def sdkName = project.ext.sdkName
    def sdkVersion = project.ext.sdkVersion
    ant.replaceregexp(file: '../gradle.properties', match: 'groupId=.*', replace: "groupId=$groupId", flags: 'g', byline: true)
    ant.replaceregexp(file: '../gradle.properties', match: 'sdkName=.*', replace: "sdkName=$sdkName", flags: 'g', byline: true)
    ant.replaceregexp(file: '../gradle.properties', match: 'sdkVersion=.*', replace: "sdkVersion=$sdkVersion", flags: 'g', byline: true)
}

publishing {
    publications {
        group project.ext.groupId
        version project.ext.sdkVersion

        // Create different publications for every flavor
        android.variantFilter { variant ->
            if (variant.buildType.name == "release") {

                // Dynamically create publications name
                "${variant.name}"(MavenPublication) {
                    def apiFlavor = variant.flavors.name[0]
                    def aarBaseName = variant.flavors.ext.aarBaseName[0]
                    def aarName = "${project.ext.sdkName}-${aarBaseName}-${project.ext.sdkVersion}.aar"

                    artifactId variant.flavors.ext.artifactId[0]
                    artifact("libs/${aarName}")

                    pom.withXml {
                        def apiConfigurationName = "${apiFlavor}Implementation"
                        def dependencies = configurations["implementation"].allDependencies +
                                configurations[apiConfigurationName].allDependencies

                        // Create additional node for dependencies
                        def dependenciesNode = asNode().appendNode('dependencies')

                        // Iterate over the {configurationName} dependencies, adding a <dependency> node for each
                        dependencies.each {
                            if (it.group != null && it.name != null) {
                                println "${apiConfigurationName} - adding dependency: ${it.group}:${it.name}:${it.version}"

                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)

                                // If there are any exclusions in dependency
                                if (it.excludeRules.size() > 0) {
                                    def exclusionsNode = dependencyNode.appendNode('exclusions')
                                    it.excludeRules.each { rule ->
                                        def exclusionNode = exclusionsNode.appendNode('exclusion')
                                        exclusionNode.appendNode('groupId', rule.group)
                                        exclusionNode.appendNode('artifactId', rule.module)
                                    }
                                }
                            }
                        }
                    }
                }

            }
        }
    }
}
